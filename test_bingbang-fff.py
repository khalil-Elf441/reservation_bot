# Generated by Selenium IDE
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestBingbang():
  def setup_method(self):
    #self.driver = webdriver.Chrome()
    executor_url = 'http://localhost:9222'
    # Create an instance of ChromeOptions class
    options = webdriver.ChromeOptions()
    options.add_experimental_option('debuggerAddress', 'localhost:9221')
    options.add_argument('--no-sandbox')

    driver = webdriver.Chrome(options=options)
    self.vars = {}
  
  def teardown_method(self):
    self.driver.quit()
  
  def test_bingbang(self):
    # Test name: bingbang
    # Step # | name | target | value
    # 1 | open | https://anti-captcha.com/demo/?page=recaptcha_v2_textarea | 
    self.driver.get("https://tickets.rolandgarros.com/se-connecter")
    # 2 | setWindowSize | 1033x565 | 
    self.driver.set_window_size(1033, 565)
    # 3 | click | name=login | 
    self.driver.find_element(By.NAME, "login").click()
    # 4 | type | name=login | hello
    self.driver.find_element(By.NAME, "login").send_keys("hello")
    # 5 | click | name=pass | 
    self.driver.find_element(By.NAME, "pass").click()
    # 6 | type | name=pass | test
    self.driver.find_element(By.NAME, "pass").send_keys("test")
  
# Load CSV file and run Selenium script for each row
if __name__ == '__main__':
    script = TestBingbang()
    script.setup_method()
    script.test_bingbang()