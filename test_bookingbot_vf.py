# Generated by Selenium IDE
import pytest
import time
import json
import csv
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities


def load_csv(filename):
  rows = []
  with open(filename, 'r') as csvfile:
       csvreader = csv.DictReader(csvfile)
       for row in csvreader:
           rows.append(row)
  return rows

class TestBookingbot():
  def setup_method(self):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
 
  def test_bookingbot(self, row):
    # Test name: booking_bot
    # Step # | name | target | value
    # 1 | open | https://tickets.rolandgarros.com/se-connecter | 
    self.driver.get("https://tickets.rolandgarros.com/se-connecter")
    # 2 | setWindowSize | 1034x566 | 
    self.driver.set_window_size(1034, 566)
    # 3 | click | id=login | 
    self.driver.find_element(By.ID, "login").click()
    # 4 | type | id=login | khael1234
    self.driver.find_element(By.ID, "login").send_keys(row[0])
    # 5 | click | id=password | 
    self.driver.find_element(By.ID, "password").click()
    # 6 | type | id=password | Azerty123456@
    self.driver.find_element(By.ID, "password").send_keys(row[1])
    # 7 | click | id=submit-button | 
    self.driver.find_element(By.ID, "submit-button").click()
    
    # 8 | click | css=.card-calendar:nth-child(1) > .button | 
    self.driver.find_element(By.CSS_SELECTOR, ".card-calendar:nth-child(1) > .button").click()
    # 9 | click | css=.\32 023-06-07:nth-child(2) > .txt-date | 
    self.driver.find_element(By.CSS_SELECTOR, ".\\32 023-06-07:nth-child(2) > .txt-date").click()
    # 10 | click | css=.tab-offres:nth-child(1) > .text-block-62 | 
    self.driver.find_element(By.CSS_SELECTOR, ".tab-offres:nth-child(1) > .text-block-62").click()
    # 11 | click | css=.collection-item-2:nth-child(1) .bt-main | 
    self.driver.find_element(By.CSS_SELECTOR, ".collection-item-2:nth-child(1) .bt-main").click()
    # 12 | runScript | window.scrollTo(0,0) | 
    self.driver.execute_script("window.scrollTo(0,0)")
    # 13 | click | id=category-btn_13 | 
    self.driver.find_element(By.ID, "category-btn_13").click()
    # 14 | click | css=.increment | 
    self.driver.find_element(By.CSS_SELECTOR, ".increment").click()
    # 15 | click | css=.increment | 
    self.driver.find_element(By.CSS_SELECTOR, ".increment").click()
    # 16 | click | css=.add-to-cart | 
    self.driver.find_element(By.CSS_SELECTOR, ".add-to-cart").click()
    # 17 | runScript | window.scrollTo(0,0) | 
    self.driver.execute_script("window.scrollTo(0,0)")
    # 18 | click | id=next-step | 
    self.driver.find_element(By.ID, "next-step").click()
    # 19 | runScript | window.scrollTo(0,0) | 
    self.driver.execute_script("window.scrollTo(0,0)")
    # 20 | click | id=skip-btn | 
    self.driver.find_element(By.ID, "skip-btn").click()
    # 21 | click | name=paiement | 
    self.driver.find_element(By.NAME, "paiement").click()
    # 22 | close |  | 
    self.driver.close()
  

   
# Load CSV file and run Selenium script for each row
if __name__ == '__main__':
    data = load_csv('data.csv')
    script = TestBookingbot()
    script.setup_method()
    for row in data:
        script.test_bookingbot(row)